import { ImpersonationBanner } from "@/components/auth/impersonation-banner";
import { Footer } from "@/components/footer";
import { MainNav } from "@/components/navigation/main-nav";
import { RouterProvider } from "@/components/router-provider";
import { siteConfig } from "@/config/navbar";
import { getSession } from "@/lib/get-session";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { headers } from "next/headers";
import NextTopLoader from "nextjs-toploader";
import { NuqsAdapter } from "nuqs/adapters/next/app";

import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const requestHeaders = await headers();
  const sessionPayload = await getSession(requestHeaders);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} flex min-h-screen flex-col antialiased`}
      >
        <NextTopLoader showSpinner={false} color="#0284c7" shadow={false} />
        <header>
          <MainNav items={siteConfig.mainNav} />
        </header>

        <main className="flex-1">
          <RouterProvider>
            <NuqsAdapter>{children}</NuqsAdapter>
          </RouterProvider>
        </main>
        <Footer />
        <ImpersonationBanner sessionPayload={sessionPayload} />
      </body>
    </html>
  );
}
